name: Docker Prod Image
on:
  push:
    branches: [main]
  pull_request:
    types:
      - closed
    branches:
      - main

permissions: read-all

jobs:
  extract-version:
    name: Extract Version
    runs-on: ubuntu-latest
    if: ((startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix-release/')) && github.event.pull_request.merged == true)
    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 1

      - name: Get image version
        id: get-version
        run: |
          version=$(jq -r .version package.json)
          echo "Version: $version"        
          echo "version=v$version" >> $GITHUB_OUTPUT

  build:
    name: Build Docker Image
    if: ((startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix-release/')) && github.event.pull_request.merged == true)
    needs: [extract-version]
    uses: ./.github/workflows/build-and-push-docker-image.yml
    with:
      img_tag: ${{ needs.extract-version.outputs.version }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  create-pull-request:
    name: Create Pull Request for Helm Charts
    runs-on: ubuntu-latest
    needs: [extract-version, build]
    env:
      TAG_NAME: ${{ needs.extract-version.outputs.version }}

    steps:
      - name: Initialize Mandatory Git Config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "noreply@github.com"

      - name: Clone Devops Repo
        run: |
          git clone https://${{secrets.PAT}}@github.com/rudderlabs/rudder-devops.git

      - name: Extract branch name
        id: extract_branch_name
        run: |
          cd rudder-devops
          branch_name=$(git rev-parse --abbrev-ref HEAD)
          echo "branch_name=$branch_name"
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Update Helm Chart and Raise Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          cd rudder-devops
          git checkout -b looker-actions-$TAG_NAME

          cd helm-charts/control-plane
          yq eval -i ".looker-actions.image.tag=\"$TAG_NAME\"" values.prod.yaml
          git add values.prod.yaml

          git commit -m "chore: upgrade looker-actions to $TAG_NAME"
          git push -u origin looker-actions-$TAG_NAME

          gh pr create --fill
